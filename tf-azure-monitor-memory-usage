provider "azurerm" {
  features {}
  subscription_id = "bfe3ee56-6234-4f05-b498-0f98e2388cf1" # ✅ Provided by you
}

variable "location" {
  default = "East US"  # ✅ You can change this to any Azure region
}

resource "azurerm_resource_group" "rg" {
  name     = "rg-monitoring-demo"
  location = var.location
}

resource "azurerm_virtual_network" "vnet" {
  name                = "vnet-monitor-demo"
  address_space       = ["10.0.0.0/16"]
  location            = var.location
  resource_group_name = azurerm_resource_group.rg.name
}

resource "azurerm_subnet" "subnet" {
  name                 = "subnet-monitor-demo"
  resource_group_name  = azurerm_resource_group.rg.name
  virtual_network_name = azurerm_virtual_network.vnet.name
  address_prefixes     = ["10.0.1.0/24"]
}

resource "azurerm_network_interface" "nic" {
  name                = "nic-monitor-demo"
  location            = var.location
  resource_group_name = azurerm_resource_group.rg.name

  ip_configuration {
    name                          = "ipconfig1"
    subnet_id                     = azurerm_subnet.subnet.id
    private_ip_address_allocation = "Dynamic"
    public_ip_address_id          = azurerm_public_ip.pip.id   # ✅ This line connects the public IP
  }
}

resource "azurerm_public_ip" "pip" {
  name                = "public-ip-monitor-demo"
  location            = var.location
  resource_group_name = azurerm_resource_group.rg.name
  allocation_method   = "Dynamic"   # ✅ This is what was missing
  sku                 = "Basic"
}

resource "azurerm_linux_virtual_machine" "vm" {
  name                = "vm-monitor-demo"
  location            = var.location
  resource_group_name = azurerm_resource_group.rg.name
  size                = "Standard_B1s"
  admin_username      = "azureuser"
  network_interface_ids = [azurerm_network_interface.nic.id]
  disable_password_authentication = true

  admin_ssh_key {
    username   = "azureuser"
    public_key = file("/home/kenny/.ssh/id_rsa.pub") # ✅ Replace with the path to your actual public SSH key if different
  }

  os_disk {
    caching              = "ReadWrite"
    storage_account_type = "Standard_LRS"
  }

  source_image_reference {
    publisher = "Canonical"
    offer     = "0001-com-ubuntu-server-focal"
    sku       = "20_04-lts"
    version   = "latest"
  }

  depends_on = [azurerm_public_ip.pip]
}

resource "azurerm_log_analytics_workspace" "law" {
  name                = "log-monitor-workspace"
  location            = var.location
  resource_group_name = azurerm_resource_group.rg.name
  sku                 = "PerGB2018"
  retention_in_days   = 30
}

resource "azurerm_monitor_diagnostic_setting" "vm_diag" {
  name                       = "diag-setting"
  target_resource_id         = azurerm_linux_virtual_machine.vm.id
  log_analytics_workspace_id = azurerm_log_analytics_workspace.law.id

  metric {
    category = "AllMetrics"
    enabled  = true
  }
}

resource "azurerm_monitor_action_group" "email_group" {
  name                = "action-group-monitor"
  resource_group_name = azurerm_resource_group.rg.name
  short_name          = "alertgrp"

  email_receiver {
    name                    = "SendToGbmk"
    email_address           = "gbmkocc1@gmail.com" # ✅ Your email address
    use_common_alert_schema = true
  }
}

resource "azurerm_monitor_metric_alert" "memory_alert" {
  name                = "high-memory-alert"
  resource_group_name = azurerm_resource_group.rg.name
  scopes              = [azurerm_linux_virtual_machine.vm.id]
  description         = "Triggered when available memory drops below 300MB"
  severity            = 2
  frequency           = "PT1M"
  window_size         = "PT5M"

  criteria {
    metric_namespace = "Microsoft.Compute/virtualMachines"
    metric_name      = "Available Memory Bytes"
    aggregation      = "Average"
    operator         = "LessThan"
    threshold        = 500000000  # ✅ ~500MB
  }

  action {
    action_group_id = azurerm_monitor_action_group.email_group.id
  }
}

output "vm_public_ip" {
  value = azurerm_public_ip.vm_ip.ip_address
}
